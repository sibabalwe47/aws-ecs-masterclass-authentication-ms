name: Push Authentication service Docker image to AWS ECR Private Repo
on:
  push:
    branches: [main]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::211125470998:role/GitHubActionsCICDAssumeRole #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHubActionsCICDAssumeRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/instagram-on-aws-auth:${GITHUB_SHA}

      # - name: Install AWS CLI v2
      #   run: |
      #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
      #     unzip -q /tmp/awscliv2.zip -d /tmp
      #     rm /tmp/awscliv2.zip
      #     sudo /tmp/aws/install --update
      #     rm -rf /tmp/aws/
      #     aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/instagram-on-aws-auth
      #     docker build -t $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/instagram-on-aws-auth .
      #     docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/instagram-on-aws-auth:$GITHUB_SHA
